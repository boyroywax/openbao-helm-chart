---
# Job to create NFS PersistentVolume with service ClusterIP for vault storage
apiVersion: batch/v1
kind: Job
metadata:
  name: create-nfs-pv-{{ .Values.vault.name }}
  namespace: {{ include "openbao.namespace" . }}
  labels:
    {{- include "openbao.labels" . | nindent 4 }}
    component: storage-setup
  annotations:
    "helm.sh/hook": post-install,post-upgrade
    "helm.sh/hook-weight": "1"
    "helm.sh/hook-delete-policy": hook-succeeded,before-hook-creation
spec:
  template:
    metadata:
      labels:
        app: nfs-pv-creator
        vault: {{ .Values.vault.name }}
    spec:
      restartPolicy: Never
      serviceAccountName: openbao-pv-creator
      containers:
      - name: pv-creator
        image: bitnami/kubectl:latest
        command:
        - /bin/bash
        - -c
        - |
          set -e
          
          echo "Waiting for NFS server service to be available..."
          while ! kubectl get svc {{ include "openbao.nfsServerName" . }} -n {{ include "openbao.namespace" . }} > /dev/null 2>&1; do
            echo "Waiting for service {{ include "openbao.nfsServerName" . }}..."
            sleep 5
          done
          
          # Get the NFS server ClusterIP
          NFS_SERVER_IP=$(kubectl get svc {{ include "openbao.nfsServerName" . }} -n {{ include "openbao.namespace" . }} -o jsonpath='{.spec.clusterIP}')
          echo "Found NFS Server ClusterIP: $NFS_SERVER_IP"
          
          # Check if PV already exists
          if kubectl get pv {{ .Values.vault.name }}-nfs-pv > /dev/null 2>&1; then
            echo "PersistentVolume {{ .Values.vault.name }}-nfs-pv already exists"
            # Update the server IP if different
            CURRENT_SERVER=$(kubectl get pv {{ .Values.vault.name }}-nfs-pv -o jsonpath='{.spec.nfs.server}')
            if [ "$CURRENT_SERVER" != "$NFS_SERVER_IP" ]; then
              echo "Updating PV server from $CURRENT_SERVER to $NFS_SERVER_IP"
              kubectl delete pv {{ .Values.vault.name }}-nfs-pv || true
              sleep 2
            else
              echo "PV server IP is already correct"
              exit 0
            fi
          fi
          
          # Create the PersistentVolume with the correct IP
          cat <<EOF | kubectl apply -f -
          apiVersion: v1
          kind: PersistentVolume
          metadata:
            name: {{ .Values.vault.name }}-nfs-pv
            labels:
              {{- include "openbao.labels" . | nindent 14 }}
              storage-type: nfs-shared
              component: storage-infrastructure
          spec:
            capacity:
              storage: {{ .Values.nfs.storage.size }}
            volumeMode: Filesystem
            accessModes:
            - ReadWriteMany
            persistentVolumeReclaimPolicy: Retain
            storageClassName: ""
            mountOptions:
            - nfsvers=3
            - proto=tcp
            - timeo=600
            - retrans=2
            - hard
            nfs:
              server: ${NFS_SERVER_IP}
              path: /nfsshare/data
          EOF
          
          echo "âœ… PersistentVolume {{ .Values.vault.name }}-nfs-pv created successfully with server: $NFS_SERVER_IP"
