---
# Storage PVC for NFS server backend (vault data)
apiVersion: v1
kind: PersistentVolumeClaim
metadata:
  name: {{ include "openbao.nfsServerName" . }}-storage-pvc
  namespace: {{ include "openbao.namespace" . }}
  labels:
    {{- include "openbao.labels" . | nindent 4 }}
    component: storage-infrastructure
spec:
  accessModes:
    - ReadWriteOnce
  resources:
    requests:
      storage: {{ .Values.nfs.storage.size }}
  storageClassName: {{ .Values.nfs.storage.storageClass }}

---
# NFS Server Deployment for vault storage
apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "openbao.nfsServerName" . }}
  namespace: {{ include "openbao.namespace" . }}
  labels:
    {{- include "openbao.labels" . | nindent 4 }}
    component: nfs-server
spec:
  replicas: 1
  selector:
    matchLabels:
      app: nfs-server
      vault: {{ .Values.vault.name }}
  template:
    metadata:
      labels:
        app: nfs-server
        vault: {{ .Values.vault.name }}
        component: nfs-server
    spec:
      securityContext:
        runAsUser: {{ .Values.nfs.securityContext.runAsUser }}
        runAsGroup: {{ .Values.nfs.securityContext.runAsGroup }}
        fsGroup: {{ .Values.nfs.securityContext.fsGroup }}
      containers:
      - name: nfs-server
        image: "{{ .Values.nfs.image.repository }}:{{ .Values.nfs.image.tag }}"
        imagePullPolicy: {{ .Values.nfs.image.pullPolicy }}
        securityContext:
          privileged: {{ .Values.nfs.securityContext.privileged }}
        env:
        - name: NFS_SHARE_NAME
          value: "{{ .Values.vault.name }}"
        - name: NFS_SHARE_PATH
          value: "/nfsshare/data"
        - name: NFS_ALLOWED_NETWORKS
          value: "10.0.0.0/8,172.16.0.0/12,192.168.0.0/16"
        - name: NFS_SYNC
          value: "true"
        - name: NFS_NO_ROOT_SQUASH
          value: "true"
        - name: NFS_INSECURE
          value: "true"
        ports:
        - name: nfs
          containerPort: 2049
          protocol: TCP
        - name: mountd
          containerPort: 20048
          protocol: TCP
        - name: rpcbind-tcp
          containerPort: 111
          protocol: TCP
        - name: rpcbind-udp
          containerPort: 111
          protocol: UDP
        volumeMounts:
        - name: nfs-storage
          mountPath: /nfsshare/data
        resources:
          {{- toYaml .Values.nfs.resources | nindent 10 }}
        readinessProbe:
          exec:
            command:
            - sh
            - -c
            - "rpcinfo -p | grep -q '100003'"
          initialDelaySeconds: 10
          periodSeconds: 10
        livenessProbe:
          exec:
            command:
            - sh
            - -c
            - "rpcinfo -p | grep -q '100003'"
          initialDelaySeconds: 30
          periodSeconds: 30
      volumes:
      - name: nfs-storage
        persistentVolumeClaim:
          claimName: {{ include "openbao.nfsServerName" . }}-storage-pvc

---
# NFS Server Service for vault
apiVersion: v1
kind: Service
metadata:
  name: {{ include "openbao.nfsServerName" . }}
  namespace: {{ include "openbao.namespace" . }}
  labels:
    {{- include "openbao.labels" . | nindent 4 }}
    component: nfs-server
spec:
  type: ClusterIP
  selector:
    app: nfs-server
    vault: {{ .Values.vault.name }}
  ports:
  - name: nfs
    port: 2049
    targetPort: 2049
    protocol: TCP
  - name: mountd
    port: 20048
    targetPort: 20048
    protocol: TCP
  - name: rpcbind-tcp
    port: 111
    targetPort: 111
    protocol: TCP
  - name: rpcbind-udp
    port: 111
    targetPort: 111
    protocol: UDP
