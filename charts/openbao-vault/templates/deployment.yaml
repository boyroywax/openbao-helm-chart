---
apiVersion: v1
kind: ConfigMap
metadata:
  name: vault-config
  namespace: {{ include "openbao.namespace" . }}
  labels:
    {{- include "openbao.labels" . | nindent 4 }}
data:
  vault.hcl: |
    storage "file" {
      path = "{{ .Values.openbao.config.storage.file.path }}"
    }
    
    listener "tcp" {
      address = "{{ .Values.openbao.config.listener.tcp.address }}"
      tls_disable = {{ .Values.openbao.config.listener.tcp.tls_disable }}
    }
    
    ui = {{ .Values.openbao.config.ui }}
    api_addr = "{{ .Values.openbao.config.api_addr }}"
    cluster_addr = "{{ .Values.openbao.config.cluster_addr }}"
    log_level = "{{ .Values.openbao.config.log_level }}"
    disable_mlock = {{ .Values.openbao.config.disable_mlock }}

---
apiVersion: apps/v1
kind: Deployment
metadata:
  name: openbao-vault
  namespace: {{ include "openbao.namespace" . }}
  labels:
    {{- include "openbao.labels" . | nindent 4 }}
    component: vault-server
spec:
  replicas: {{ .Values.openbao.replicaCount }}
  selector:
    matchLabels:
      {{- include "openbao.selectorLabels" . | nindent 6 }}
      vault: {{ .Values.vault.name }}
  template:
    metadata:
      labels:
        {{- include "openbao.selectorLabels" . | nindent 8 }}
        app: openbao
        vault: {{ .Values.vault.name }}
        component: vault-server
      annotations:
        checksum/config: {{ toYaml .Values.openbao.config | sha256sum }}
    spec:
      {{- with .Values.nodeSelector }}
      nodeSelector:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.affinity }}
      affinity:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      {{- with .Values.tolerations }}
      tolerations:
        {{- toYaml . | nindent 8 }}
      {{- end }}
      securityContext:
        runAsUser: {{ .Values.securityContext.runAsUser }}
        runAsGroup: {{ .Values.securityContext.runAsGroup }}
        runAsNonRoot: {{ .Values.securityContext.runAsNonRoot }}
        fsGroup: {{ .Values.securityContext.fsGroup }}
      containers:
      - name: vault
        image: "{{ .Values.openbao.image.repository }}:{{ .Values.openbao.image.tag }}"
        imagePullPolicy: {{ .Values.openbao.image.pullPolicy }}
        command:
          - vault
          - server
          - -config=/vault/config/vault.hcl
        ports:
        - containerPort: {{ .Values.service.targetPort }}
          name: http
          protocol: TCP
        - containerPort: {{ .Values.service.targetClusterPort }}
          name: cluster
          protocol: TCP
        env:
        - name: VAULT_ADDR
          value: "http://127.0.0.1:8200"
        - name: VAULT_API_ADDR
          value: "http://0.0.0.0:8200"
        - name: VAULT_CLUSTER_ADDR
          value: "http://0.0.0.0:8201"
        - name: VAULT_RAFT_NODE_ID
          valueFrom:
            fieldRef:
              fieldPath: metadata.name
        securityContext:
          {{- if .Values.securityContext.capabilities }}
          capabilities:
            {{- toYaml .Values.securityContext.capabilities | nindent 12 }}
          {{- end }}
        volumeMounts:
        - name: vault-data
          mountPath: /vault/data
        - name: vault-config
          mountPath: /vault/config
        resources:
          {{- toYaml .Values.openbao.resources | nindent 10 }}
        {{- if .Values.openbao.probes.readiness.enabled }}
        readinessProbe:
          httpGet:
            path: {{ .Values.openbao.probes.readiness.path }}
            port: {{ .Values.openbao.probes.readiness.port }}
          initialDelaySeconds: {{ .Values.openbao.probes.readiness.initialDelaySeconds }}
          periodSeconds: {{ .Values.openbao.probes.readiness.periodSeconds }}
        {{- end }}
        {{- if .Values.openbao.probes.liveness.enabled }}
        livenessProbe:
          httpGet:
            path: {{ .Values.openbao.probes.liveness.path }}
            port: {{ .Values.openbao.probes.liveness.port }}
          initialDelaySeconds: {{ .Values.openbao.probes.liveness.initialDelaySeconds }}
          periodSeconds: {{ .Values.openbao.probes.liveness.periodSeconds }}
        {{- end }}
      volumes:
      - name: vault-data
        persistentVolumeClaim:
          claimName: {{ .Values.vault.name }}-vault-data-pvc
      - name: vault-config
        configMap:
          name: vault-config

---
apiVersion: v1
kind: Service
metadata:
  name: openbao-vault-service
  namespace: {{ include "openbao.namespace" . }}
  labels:
    {{- include "openbao.labels" . | nindent 4 }}
    component: vault-server
spec:
  type: {{ .Values.service.type }}
  selector:
    {{- include "openbao.selectorLabels" . | nindent 4 }}
    vault: {{ .Values.vault.name }}
  ports:
  - port: {{ .Values.service.port }}
    targetPort: {{ .Values.service.targetPort }}
    name: http
    protocol: TCP
  - port: {{ .Values.service.clusterPort }}
    targetPort: {{ .Values.service.targetClusterPort }}
    name: cluster
    protocol: TCP
