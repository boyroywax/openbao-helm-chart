1. Get the application URL by running these commands:
{{- if contains "NodePort" .Values.service.type }}
  export NODE_PORT=$(kubectl get --namespace {{ .Values.namespace.name }} -o jsonpath="{.spec.ports[0].nodePort}" services {{ include "openbao.fullname" . }})
  export NODE_IP=$(kubectl get nodes --namespace {{ .Values.namespace.name }} -o jsonpath="{.items[0].status.addresses[0].address}")
  echo http://$NODE_IP:$NODE_PORT
{{- else if contains "LoadBalancer" .Values.service.type }}
     NOTE: It may take a few minutes for the LoadBalancer IP to be available.
           You can watch the status of by running 'kubectl get --namespace {{ .Values.namespace.name }} svc -w {{ include "openbao.fullname" . }}'
  export SERVICE_IP=$(kubectl get svc --namespace {{ .Values.namespace.name }} {{ include "openbao.fullname" . }} --template "{{"{{ range (index .status.loadBalancer.ingress 0) }}{{.}}{{ end }}"}}")
  echo http://$SERVICE_IP:{{ .Values.service.port }}
{{- else if contains "ClusterIP" .Values.service.type }}
  export POD_NAME=$(kubectl get pods --namespace {{ .Values.namespace.name }} -l "app={{ include "openbao.name" . }},release={{ .Release.Name }}" -o jsonpath="{.items[0].metadata.name}")
  echo "Visit http://127.0.0.1:8080 to use your application"
  kubectl --namespace {{ .Values.namespace.name }} port-forward $POD_NAME 8080:{{ .Values.service.port }}
{{- end }}

2. To check the status of your OpenBao Vault deployment:
   kubectl get pods -n {{ .Values.namespace.name }}
   kubectl get svc -n {{ .Values.namespace.name }}

3. To initialize and unseal the vault (if not done automatically):
   kubectl exec -n {{ .Values.namespace.name }} -it {{ include "openbao.fullname" . }}-<pod-suffix> -- vault operator init
   kubectl exec -n {{ .Values.namespace.name }} -it {{ include "openbao.fullname" . }}-<pod-suffix> -- vault operator unseal

4. The OpenBao Vault is deployed in the {{ .Values.namespace.name }} namespace.